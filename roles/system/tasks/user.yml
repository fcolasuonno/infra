---
- name: Set the name of a sudo group
  set_fact:
    sudo_group: sudo
   
- name: Create a login user
  user:
    name: "{{ username }}"
    password: "{{ password | password_hash('sha512') }}"
    groups: 
      - "{{ sudo_group }}"
      - users
    state: present
    append: true

- name: Ensure group "{{ username }}" exists
  group:
    name: "{{ username }}"
    state: present

- name: Ensure group "sambashare" exists
  when: enable_samba | default(False) 
  group:
    name: "sambashare"
    state: present
 
- name: Append the samba group
  when: enable_samba | default(False) 
  user:
    name: "{{ username }}"
    groups: 
      - sambashare
    append: true

- name: Create the docker symbolic link
  become: yes
  ansible.builtin.file:
    src: "{{ docker_dir }}"
    dest: "/docker"
    owner: "{{ username }}"
    group: "{{ username }}"
    state: link

- name: Chmod the user home directory
  file:
    path: "/home/{{ username }}"
    state: directory
    mode: 0755
    owner: "{{ username }}"
    group: "{{ username }}"
    recurse: yes

- name: Allow 'sudo' group to have passwordless sudo
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%{{ sudo_group }}'
    line: '%{{ sudo_group }} ALL=(ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'

- name: Copy the public SSH key 
  authorized_key:
    user: "{{ username }}"
    state: present
    key: "{{ ssh_public_key }}"
  notify:
    - remove default user

- name: Set the default shell
  user: 
    name: "{{ username }}"
    shell: "{{ shell }}"

- name: Suppress login messages
  file:
    name: /home/{{ username }}/.hushlogin
    mode: 0644
    state: touch
    owner: "{{ username }}"
    group: "{{ username }}"
    modification_time: preserve
    access_time: preserve

- name: Disable cron e-mail notifications
  cron:
    name: MAILTO
    user: "{{ username }}"
    env: yes
    job: ""


- name: Create additional users (no login)
  user:
    name: "{{ item.name }}"
    groups: "{{ item.groups }}"
    state: present
    append: true
    shell: /sbin/nologin
  loop: "{{ additional_users }}"
  when: additional_users is defined
  no_log: true
