#!/usr/bin/with-contenv python3

import cmd
import json
import os
import subprocess
import urllib.request as Web
import requests
import socket
import zipfile
import tempfile
import shutil
import sys
import getopt
import time

pubK = os.getenv('SURFSHARK_PUBLIC_KEY')
prvK = os.getenv('SURFSHARK_PRIVATE_KEY')

def Builder(path):
    config = os.path.join(path, 'config')
    os.makedirs(config, exist_ok = True)
    request = Web.Request('https://api.surfshark.com/v4/server/clusters/generic')
    request.add_header("user-agent", "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36")
    JData = json.loads(Web.urlopen(request).read())
    unique = {each['location']: each for each in JData}.values()
    print(f'{colors.OKBLUE} Generating files{colors.ENDC}')
    for i in unique:
        try:
            ip = socket.gethostbyname(i['connectionName'])
            location = i['location'].replace(" ", "_")
            with open(config + '/' + location + '.conf', 'w') as file:
                wg = f"""# Script by Incognito Coder @IC_mods
[Interface]
PrivateKey = {prvK}
Address = 10.14.0.2/16
DNS = 162.252.172.57, 149.154.159.92
#Allow local access
PostUp =  DROUTE=$(ip route | grep default | awk '{{print $3}}'); HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route add $HOMENET3 via $DROUTE;ip route add $HOMENET2 via $DROUTE; ip route add $HOMENET via $DROUTE;iptables -I OUTPUT -d $HOMENET -j ACCEPT;iptables -A OUTPUT -d $HOMENET2 -j ACCEPT; iptables -A OUTPUT -d $HOMENET3 -j ACCEPT;  iptables -A OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT
PreDown = DROUTE=$(ip route | grep default | awk '{{print $3}}'); HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route del $HOMENET3 via $DROUTE;ip route del $HOMENET2 via $DROUTE; ip route del $HOMENET via $DROUTE;iptables -D OUTPUT -d $HOMENET -j ACCEPT;iptables -D OUTPUT -d $HOMENET2 -j ACCEPT; iptables -D OUTPUT -d $HOMENET3 -j ACCEPT;  iptables -D OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT

[Peer]
PublicKey = {i['pubKey']}
AllowedIps= 0.0.0.0/0
Endpoint = {ip}:51820
"""
                file.write(wg)
                file.close()
                print(f"{colors.OKBLUE} {location}{colors.ENDC} Created Successfully.")
        except:
            print(f'{colors.FAIL}[?] {file} Invalid Hostname or Server is Down.{colors.ENDC}')
    print(f'{colors.OKGREEN} Built{colors.ENDC}')

class colors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

def main(argv):
    path = '/config/wireguard-data/'
    Builder(path)
    config = os.path.join(path, 'config', os.getenv('SURFSHARK_LOCATION') + '.conf')
    shutil.copy2(config, '/config/wg0.conf')

if __name__ == "__main__":
    main(sys.argv[1:])